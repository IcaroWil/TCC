generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

model User {
    id              String      @id @default(uuid())
    email           String      @unique
    password        String
    name            String
    phone           String
    role            UserRole
    establishmentId String?     @map("establishment_id")
    createdAt       DateTime    @default(now()) @map("created_at")
    updatedAt        DateTime    @updatedAt @map("updated_at")

    establishment           Establishment?  @relation(fields: [establishmentId], references: [id])
    clientAppointments      Appointment[]   @relation("ClientAppointments")
    employeeAppointments    Appointment[]   @relation("EmployeeAppointments")

    @@map("users")
}

model BusinessCategory {
    id              String                @id @default(uuid())
    name            String
    type            BusinessCategoryType
    description     String
    subcategories   String[]
    defaultSettings Json                  @map("default_settings")
    isActive        Boolean               @default(true) @map("is_active")
    createdAt       DateTime              @default(now()) @map("created_at")
    updatedAt       DateTime              @updatedAt @map("updated_at")

    establishments  Establishment[]

    @@map("business_categories")
}

model Establishment {
    id                  String              @id @default(uuid())
    name                String
    email               String              @unique
    phone               String
    address             String
    city                String
    state               String
    zipCode             String              @map("zip_code")
    businessCategoryId  String              @map("business_category_id")
    subcategory         String
    businessType        BusinessType        @map("business_type")
    document            String              @unique
    description         String?
    website             String?
    socialMedia         Json?               @map("social_media")
    isActive            Boolean             @default(true) @map("is_active")
    createdAt           DateTime            @default(now()) @map("created_at")
    updatedAt           DateTime            @updatedAt @map("updated_at")

    businessCategory    BusinessCategory    @relation(fields: [businessCategoryId], references: [id])
    settings            EstablishmentSettings?
    users               User[]
    services            Service[]
    appointments        Appointment[]

    @@map("establishments")
}

model EstablishmentSettings {
    id                    String        @id @default(uuid())
    establishmentId       String        @unique @map("establishment_id")
    workingHours          Json          @map("working_hours")
    appointmentSettings   Json          @map("appointment_settings")
    paymentSettings       Json          @map("payment_settings")
    notificationSettings  Json          @map("notification_settings")
    customFields          Json          @map("custom_fields")
    integrations          Json
    createdAt             DateTime      @default(now()) @map("created_at")
    updatedAt             DateTime      @updatedAt @map("updated_at")

    establishment         Establishment @relation(fields: [establishmentId], references: [id])

    @@map("establishment_settings")
}

model Service {
  id              String   @id @default(uuid())
  name            String
  description     String
  duration        Int
  price           Decimal  @db.Decimal(10, 2)
  establishmentId String   @map("establishment_id")
  isActive        Boolean  @default(true) @map("is_active")
  createdAt       DateTime @default(now()) @map("created_at")
  updatedAt       DateTime @updatedAt @map("updated_at")

  establishment Establishment @relation(fields: [establishmentId], references: [id])
  appointments  Appointment[]

  @@map("services")
}

model Appointment {
  id              String            @id @default(uuid())
  clientId        String            @map("client_id")
  serviceId       String            @map("service_id")
  establishmentId String            @map("establishment_id")
  employeeId      String            @map("employee_id")
  scheduledAt     DateTime          @map("scheduled_at")
  status          AppointmentStatus @default(SCHEDULED)
  notes           String?
  createdAt       DateTime          @default(now()) @map("created_at")
  updatedAt       DateTime          @updatedAt @map("updated_at")

  client        User          @relation("ClientAppointments", fields: [clientId], references: [id])
  employee      User          @relation("EmployeeAppointments", fields: [employeeId], references: [id])
  service       Service       @relation(fields: [serviceId], references: [id])
  establishment Establishment @relation(fields: [establishmentId], references: [id])

  @@map("appointments")
}

enum UserRole {
  CLIENT
  ADMIN
  EMPLOYEE
}

enum AppointmentStatus {
  SCHEDULED
  CONFIRMED
  IN_PROGRESS
  COMPLETED
  CANCELLED
}

enum BusinessCategoryType {
  BEAUTY_AESTHETICS
  HEALTH_WELLNESS
  PROFESSIONAL_SERVICES
  EDUCATION_TRAINING
  OTHER
}

enum BusinessType {
  INDIVIDUAL
  COMPANY
}